---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: datamart
    what: rabbitmq
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: remram/rabbitmq:3.7.8
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
  labels:
    app: datamart
    what: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: redis
    spec:
      containers:
      - name: redis
        image: redis:5.0
        args: ["redis-server", "/usr/local/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/redis
      volumes:
      - name: config
        configMap:
          name: config
          items:
          - key: redis.conf
            path: redis.conf
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: lazo
  labels:
    app: datamart
    what: lazo
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: lazo
    spec:
      containers:
      - name: lazo
        image: registry.gitlab.com/vida-nyu/datamart/lazo-index-service:0.1.0
        env:
        - name: DATABASE
          value: elasticsearch
        - name: PORT
          value: "50051"
        - name: ELASTICSEARCH_HOST
          value: elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9200"
        ports:
        - containerPort: 50051
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: coordinator
  labels:
    app: datamart
    what: coordinator
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: coordinator
    spec:
      containers:
      - name: web
        image: datamart_coordinator
        imagePullPolicy: IfNotPresent
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: S3_KEY
          valueFrom:
            secretKeyRef:
              name: secrets
              key: s3.key
        - name: S3_SECRET
          valueFrom:
            secretKeyRef:
              name: secrets
              key: s3.secret
        - name: S3_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.url
        - name: S3_CLIENT_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.client_url
        - name: S3_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.bucket_prefix
        - name: GCS_PROJECT
          valueFrom:
            secretKeyRef:
              name: secrets
              key: gcs.project
        - name: GCS_CREDS
          valueFrom:
            secretKeyRef:
              name: secrets
              key: gcs.creds
        - name: GCS_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: config
              key: gcs.bucket_prefix
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        - name: QUERY_HOST
          valueFrom:
            configMapKeyRef:
              name: config
              key: query_host
        ports:
        - containerPort: 8001
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: query
  labels:
    app: datamart
    what: query
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: query
    spec:
      containers:
      - name: web
        image: datamart_query
        imagePullPolicy: IfNotPresent
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: S3_KEY
          valueFrom:
            secretKeyRef:
              name: secrets
              key: s3.key
        - name: S3_SECRET
          valueFrom:
            secretKeyRef:
              name: secrets
              key: s3.secret
        - name: S3_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.url
        - name: S3_CLIENT_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.client_url
        - name: S3_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.bucket_prefix
        - name: GCS_PROJECT
          valueFrom:
            secretKeyRef:
              name: secrets
              key: gcs.project
        - name: GCS_CREDS
          valueFrom:
            secretKeyRef:
              name: secrets
              key: gcs.creds
        - name: GCS_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: config
              key: gcs.bucket_prefix
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        - name: REDIS_HOST
          value: redis
        - name: LAZO_SERVER_HOST
          value: lazo
        - name: LAZO_SERVER_PORT
          value: "50051"
        ports:
        - containerPort: 8002
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          periodSeconds: 1
          failureThreshold: 2
      terminationGracePeriodSeconds: 600
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: profiler
  labels:
    app: datamart
    what: profiler
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app: datamart
        what: profiler
    spec:
      containers:
      - name: web
        image: datamart_profiler
        imagePullPolicy: IfNotPresent
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: S3_KEY
          valueFrom:
            secretKeyRef:
              name: secrets
              key: s3.key
        - name: S3_SECRET
          valueFrom:
            secretKeyRef:
              name: secrets
              key: s3.secret
        - name: S3_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.url
        - name: S3_CLIENT_URL
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.client_url
        - name: S3_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: config
              key: s3.bucket_prefix
        - name: GCS_PROJECT
          valueFrom:
            secretKeyRef:
              name: secrets
              key: gcs.project
        - name: GCS_CREDS
          valueFrom:
            secretKeyRef:
              name: secrets
              key: gcs.creds
        - name: GCS_BUCKET_PREFIX
          valueFrom:
            configMapKeyRef:
              name: config
              key: gcs.bucket_prefix
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        - name: LAZO_SERVER_HOST
          value: lazo
        - name: LAZO_SERVER_PORT
          value: "50051"
