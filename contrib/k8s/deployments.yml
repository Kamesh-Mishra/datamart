---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: datamart
    what: elasticsearch
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: elasticsearch
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
        env:
        - name: cluster.name
          valueFrom:
            configMapKeyRef:
              name: config
              key: elasticsearch.cluster_name
        # This needs special permissions that I don't know how to grant
        # - name: bootstrap.memory_lock
        #   value: "true"
        - name: ES_HEAP_SIZE
          valueFrom:
            configMapKeyRef:
              name: config
              key: elasticsearch.heap_size
        ports:
        - containerPort: 9200
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: elasticsearch
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: datamart
    what: rabbitmq
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: remram/rabbitmq:3.7.8
        imagePullPolicy: Never
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: coordinator
  labels:
    app: datamart
    what: coordinator
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: coordinator
    spec:
      containers:
      - name: web
        image: datamart_coordinator
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        - name: QUERY_HOST
          valueFrom:
            configMapKeyRef:
              name: config
              key: query_host
        ports:
        - containerPort: 8001
          hostPort: 8001
        volumeMounts:
        - mountPath: /datasets
          name: datasets
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: query
  labels:
    app: datamart
    what: query
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: query
    spec:
      containers:
      - name: web
        image: datamart_query
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        ports:
        - containerPort: 8002
        volumeMounts:
        - mountPath: /datasets
          name: datasets
        - mountPath: /cache
          name: cache
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets
      - name: cache
        persistentVolumeClaim:
          claimName: cache
      terminationGracePeriodSeconds: 300
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: profiler
  labels:
    app: datamart
    what: profiler
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: profiler
    spec:
      containers:
      - name: web
        image: datamart_profiler
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        volumeMounts:
        - mountPath: /datasets
          name: datasets
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: example-discoverer
  labels:
    app: datamart
    what: example-discoverer
    example: "true"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: example-discoverer
    spec:
      containers:
      - name: discoverer
        image: datamart_example_discoverer
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.user
        - name: AMQP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: amqp.password
        volumeMounts:
        - mountPath: /datasets
          name: datasets
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets
