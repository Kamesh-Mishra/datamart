version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
    restart: on-failure
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_HEAP_SIZE=4g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
  elasticsearch_exporter:
    image: justwatch/elasticsearch_exporter:1.0.2
    restart: on-failure
    command:
      - '-es.uri=http://elasticsearch:9200'
    ports:
      - 9108
  rabbitmq:
    image: remram/rabbitmq:3.7.8
    build:
      context: ./docker
      dockerfile: rabbitmq.dockerfile
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_USER}
      - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
    ports:
      - 8080:15672
      - 5672:5672
  coordinator:
    build:
      context: .
      dockerfile: coordinator/Dockerfile
    command: python -m coordinator.web
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - QUERY_HOST=http://localhost:8002
    ports:
      - 8001:8001
    volumes:
      - datasets:/datasets
#      - ./coordinator/coordinator:/usr/src/app/coordinator/coordinator
  query:
    build:
      context: .
      dockerfile: query/Dockerfile
    command: python -m query.web
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - HTTP_CHECK=GET /health
    ports:
      - 8002
    volumes:
      - datasets:/datasets
      - query-cache:/cache
      - ../data/seed_datasets_current:/d3m_seed_datasets:ro
      - ../data/seed_datasets_data_augmentation:/d3m_seed_datasets_augmentation:ro
#      - ./query/query:/usr/src/app/query/query
  querylb:
    image: dockercloud/haproxy:1.6.7
    environment:
      - EXTRA_DEFAULT_SETTINGS=timeout http-request 900s,timeout server 900s
      - HEALTH_CHECK=check inter 1000 rise 2 fall 1
    ports:
      - 8002:80
      - 8081:1936
    links:
      - query
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  profiler:
    build:
      context: .
      dockerfile: profiler/Dockerfile
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
    volumes:
      - datasets:/datasets
      - ../data/seed_datasets_current:/d3m_seed_datasets:ro
      - ../data/seed_datasets_data_augmentation:/d3m_seed_datasets_augmentation:ro
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
  example_discoverer:
    build:
      context: .
      dockerfile: discovery/Dockerfile
    command: example
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
    volumes:
      - datasets:/datasets
  d3m_seeds:
    build:
      context: .
      dockerfile: discovery/Dockerfile
    command: d3m
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
    volumes:
      - datasets:/datasets
      - ../data/seed_datasets_current:/d3m_seed_datasets:ro
      - ../data/seed_datasets_data_augmentation:/d3m_seed_datasets_augmentation:ro
  socrata:
    build:
      context: .
      dockerfile: discovery/socrata/Dockerfile
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
  noaa:
    build:
      context: .
      dockerfile: discovery/noaa/Dockerfile
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - NOAA_TOKEN=${NOAA_TOKEN}
  web:
    build:
      context: .
      dockerfile: discovery/web/Dockerfile
    environment:
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - AMQP_HOST=rabbitmq
      - AMQP_USER=${AMQP_USER}
      - AMQP_PASSWORD=${AMQP_PASSWORD}
      - BING_API_KEY=${BING_API_KEY}
volumes:
  datasets:
  query-cache:
