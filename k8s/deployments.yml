##########
# Volumes
##########

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: elasticsearch-pv
  labels:
    type: local
    app: datamart
    what: elasticsearch
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/datamart/prod/elasticsearch"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: elasticsearch-pvc
spec:
  storageClassName: ""
  selector:
    matchLabels:
      app: datamart
      what: elasticsearch
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: datasets-pv
  labels:
    type: local
    app: datamart
    what: datasets
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/datamart/prod/datasets"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: datasets-pvc
spec:
  storageClassName: ""
  selector:
    matchLabels:
      app: datamart
      what: datasets
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: query-cache-pv
  labels:
    type: local
    app: datamart
    what: query-cache
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/lib/datamart/prod/query-cache"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: query-cache-pvc
spec:
  storageClassName: ""
  selector:
    matchLabels:
      app: datamart
      what: query-cache
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi


##########
# Deployments
##########

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dm-elasticsearch
  labels:
    app: datamart
    what: elasticsearch
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: elasticsearch
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
        env:
        - name: cluster.name
          value: "docker-cluster"
        # This needs special permissions that I don't know how to grant
        # - name: bootstrap.memory_lock
        #   value: "true"
        - name: ES_HEAP_SIZE
          value: "2g"
        ports:
        - containerPort: 9200
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: elasticsearch-pvc
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dm-rabbitmq
  labels:
    app: datamart
    what: rabbitmq
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: remram/rabbitmq:3.7.8
        imagePullPolicy: Never
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: datamart
        - name: RABBITMQ_DEFAULT_PASS
          value: hackme
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dm-coordinator
  labels:
    app: datamart
    what: coordinator
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: datamart
        what: coordinator
    spec:
      containers:
      - name: web
        image: datamart_coordinator
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          value: datamart
        - name: AMQP_PASSWORD
          value: hackme
        - name: QUERY_HOST
          value: http://192.168.99.100:30081
        ports:
        - containerPort: 8001
          hostPort: 8001
        volumeMounts:
        - mountPath: /datasets
          name: datasets
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets-pvc
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dm-query
  labels:
    app: datamart
    what: query
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: query
    spec:
      containers:
      - name: web
        image: datamart_query
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          value: datamart
        - name: AMQP_PASSWORD
          value: hackme
        ports:
        - containerPort: 8002
        volumeMounts:
        - mountPath: /datasets
          name: datasets
        - mountPath: /cache
          name: query-cache
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets-pvc
      - name: query-cache
        persistentVolumeClaim:
          claimName: query-cache-pvc
      terminationGracePeriodSeconds: 300
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dm-profiler
  labels:
    app: datamart
    what: profiler
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: profiler
    spec:
      containers:
      - name: web
        image: datamart_profiler
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          value: datamart
        - name: AMQP_PASSWORD
          value: hackme
        volumeMounts:
        - mountPath: /datasets
          name: datasets
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets-pvc
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dm-example-discoverer
  labels:
    app: datamart
    what: example-discoverer
    example: "true"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: datamart
        what: example-discoverer
    spec:
      containers:
      - name: discoverer
        image: datamart_example_discoverer
        imagePullPolicy: Never
        env:
        - name: ELASTICSEARCH_HOSTS
          value: elasticsearch:9200
        - name: AMQP_HOST
          value: rabbitmq
        - name: AMQP_USER
          value: datamart
        - name: AMQP_PASSWORD
          value: hackme
        volumeMounts:
        - mountPath: /datasets
          name: datasets
      volumes:
      - name: datasets
        persistentVolumeClaim:
          claimName: datasets-pvc
