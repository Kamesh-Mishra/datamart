image: python:3.6

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - curl -Lo /tmp/docker.tgz https://get.docker.com/builds/Linux/x86_64/docker-17.05.0-ce.tgz && tar -xf /tmp/docker.tgz -C /usr/local && rm /tmp/docker.tgz && export PATH=/usr/local/docker:$PATH && export DOCKER_HOST=tcp://docker:2375
  - docker info
  - curl -Lo /usr/local/bin/docker-compose "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)"
  - chmod +x /usr/local/bin/docker-compose

test:
  stage: test
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - |
      # Pull the base image so we don't have to build from scratch
      docker pull $CI_REGISTRY_IMAGE/base || true
      # Update the base image (maybe)
      docker build -t datamart_base . \
        --cache-from=$CI_REGISTRY_IMAGE/base \
        -f base.Dockerfile
      # Push the updated image to the registry (might be no-op)
      docker tag datamart_base $CI_REGISTRY_IMAGE/base
      docker push $CI_REGISTRY_IMAGE/base
    - docker-compose build
    - |
      patch -p1 <<'END'
      --- a/docker-compose.yml
      +++ b/docker-compose.yml
      @@ -7,4 +7,4 @@ services:
             - cluster.name=docker-cluster
             - bootstrap.memory_lock=true
      -      - ES_HEAP_SIZE=4g
      +      - ES_HEAP_SIZE=256m
           ulimits:
      END
    - docker-compose up -d elasticsearch rabbitmq
    - sleep 10
    - docker-compose up -d coordinator
    - sleep 3
    - docker-compose up -d profiler query querylb example_discoverer
    - sleep 10; docker-compose ps
